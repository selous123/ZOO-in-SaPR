from __future__ import print_function
import numpy as np

def generate_table(y,title):
    y = np.array(y)
    y =y.transpose((2,0,1))

    algo = ["LR  ","CRR ","RR","LaR","HR","SZMO"]

    y = y.reshape(6,10)
    #print (y)
    #y[[0,5],:] = y[[5,0],:]
    # print (y[1:,:].shape)
    # print (y[0:1,:].shape)
    y = np.concatenate((y[1:,:],(y[0:1,:])),axis=0)
    # print(y.shape)
    print(title)
    for i in range(6):
        print(r"\textbf{%s} "%algo[i],end=' ')
        if i==5:
            for j in range(10):
                if j%2==0:
                    print("&",end='')
                    print(r"\textbf{%.3f}"%y[i,j],end='$\pm$')
                else:
                    print(r"\textbf{%.3f}"%y[i,j],end='')
        else:
            for j in range(10):
                if j%2==0:
                    print("&",end='')
                    print("%.3f"%y[i,j],end='$\pm$')
                else:
                    print("%.3f"%y[i,j],end='')
        print(r'\\')
def generatedata_table():
    title = "m:400,n:1800,sigma:[2,3,4,5,6],alpha:50"
    y_sigma = [
        [[0.0413, 0.0631, 0.0631, 0.0655, 0.1559, 0.0642 ],[0.0019, 0.0026, 0.0026, 0.0214, 0.1850, 0.0228  ]],
        [[0.0530, 0.0714, 0.0714, 0.0738, 0.1622, 0.0738],[0.0022, 0.0104, 0.0104, 0.0209, 0.1028, 0.0144]],
        [[ 0.0642, 0.0766, 0.0766, 0.0819, 0.1321, 0.0892 ],[0.0044, 0.0011, 0.0011, 0.0244, 0.2630, 0.0704]],
        [[0.0786, 0.0897, 0.0897, 0.0950, 0.1845, 0.1001],[0.0078, 0.0114, 0.0114, 0.0214, 0.1279, 0.0149]],
        [[0.0881, 0.0933, 0.0933, 0.0944, 0.1580, 0.1018 ],[0.0089, 0.0067, 0.0067, 0.0112, 0.1640, 0.0135 ]]
    ]
    generate_table(y_sigma,title)

    title = "m:500,n:[1000,1200,1400,1600,1800],sigma:1,alpha:50"
    y_n = [
        [[0.0403 ,0.0768 ,0.0768 ,0.0811 ,0.2074, 0.0762],[0.0010 ,0.0041 ,0.0042 ,0.0062 ,0.0212 ,0.0165]],
        [[0.0481 ,0.0925 ,0.0925 ,0.0945 ,0.2215 ,0.0878],[0.0041 ,0.0123 ,0.0122, 0.0254, 0.1491, 0.0352 ]],
        [[0.0573 ,0.1024 ,0.1024 ,0.1037 ,0.2350 ,0.1142 ],[0.0114, 0.0072, 0.0072, 0.0141, 0.2086, 0.5793 ]],
        [[0.0809 ,0.1292 ,0.1292 ,0.1355 ,0.2961 ,0.2145 ],[ 0.0013 ,0.0214 ,0.0214 ,0.0766 ,1.0795 ,4.9527 ]],
        [[0.1099 ,0.1676 ,0.1676 ,0.1766, 0.4052 ,0.5526],[0.0496 ,0.0384 ,0.0384 ,0.2994 ,2.6414 ,0.9905 ]]
    ]
    generate_table(y_n,title)


    y_m = [
        [[0.0725 ,0.1193 ,0.1193 ,0.1202 ,0.3224 ,0.3647],[0.0134 ,0.0220 ,0.0220 ,0.0291 ,0.2077 ,7.3572]],
        [[0.0934 ,0.1489 ,0.1489 ,0.1683 ,0.4383 ,0.5550],[0.0413 ,0.0337 ,0.0337 ,0.1369 ,1.3775 ,0.0675]],
        [[0.1330 ,0.1923 ,0.1923 ,0.2030 ,0.5648 ,0.6306],[0.0136 ,0.0385 ,0.0385 ,0.1570 ,2.4627 ,0.0637]],
        [[0.1605 ,0.2264 ,0.2264 ,0.2276 ,0.6825 ,0.6922],[0.0177 ,0.0520 ,0.0520 ,0.0518 ,0.3295, 0.1277]],
        [[0.2115 ,0.2851 ,0.2851 ,0.3074 ,0.9202 ,0.7309],[0.0311 ,0.0608 ,0.0608 ,1.0069, 7.1318 ,0.1730]],
    ]
    title = "m:[600,700,800,900,1000],n:1800,sigma:1,alpha:50"
    generate_table(y_m,title)

    y_alpha = [
        [[0.0402 ,0.0706 ,0.0706 ,0.0756 ,0.1732 ,0.0740],[0.0028, 0.0024 ,0.0024 ,0.0314 ,0.3028 ,0.0173]],
        [[0.0471 ,0.0726 ,0.0726 ,0.0745 ,0.1558 ,0.0803],[0.0045 ,0.0064 ,0.0064 ,0.0108 ,0.1526 ,0.0050]],
        [[0.0540 ,0.0794 ,0.0794 ,0.0821 ,0.1542 ,0.0930],[0.0037 ,0.0067 ,0.0067 ,0.0074 ,0.3280 ,0.0340]],
        [[0.0651 ,0.0836 ,0.0836 ,0.0910 ,0.1285 ,0.1081],[0.0051 ,0.0127 ,0.0127 ,0.0328 ,0.1971 ,0.0979]],
        [[0.0728 ,0.0861 ,0.0861 ,0.0882 ,0.1448 ,0.1081],[0.0114 ,0.0134 ,0.0134 ,0.0143 ,0.1305 ,0.0194]]
    ]
    title = "m:400,n:1800,sigma:1,alpha:[60,70,80,90,100]"
    generate_table(y_alpha,title)

def musicdata0_table():
    # y_n = [
    #     [[1.7982,3.8886,3.8886,3.7841,3.8424,3.1902],[1.0602,1.8845,1.8845,1.5586,1.7687,2.0907]],
    #     [[1.4625,3.1187,3.1187,3.1012,3.1203,2.5143],[0.5120,1.2927,1.2927,1.2219,1.2385,2.7924]],
    #     [[1.1814,2.8295,2.8295,2.7799,2.7865,1.9842],[0.0954,0.7710,0.7710,0.7627,0.7716,1.3590]],
    #     [[0.9310,2.2428,2.2428,2.2020,2.2076,1.4572],[0.1844,0.4014,0.4014,0.4755,0.4700,1.3821]],
    #     [[0.6704,1.8340,1.8340,1.8208,1.8216,1.0226],[0.1287,0.4445,0.4445,0.4678,0.4807,0.1905]]
    # ]
    y_n = [
        [[1.7962,2.9357,2.9357,2.9016,2.9134,2.1559],[0.2419,0.3754,0.3754,0.3798,0.3811,1.8888]],
        [[1.6411,2.6006,2.6006,2.5676,2.5880,2.1337],[0.9022,1.6072,1.6072,1.6009,1.6472,2.0710]],
        [[1.3265,2.2119,2.2119,2.2001,2.2064,1.4332],[0.3855,0.6569,0.6569,0.6023,0.6071,0.9715]],
        [[1.1873,1.9317,1.9317,1.9285,1.9289,1.3622],[0.5818,1.4436,1.4436,1.3847,1.4094,1.3519]],
        [[1.0566,1.7117,1.7117,1.6986,1.6993,1.2002],[0.0852,0.4054,0.4054,0.3988,0.3999,0.2162]]
    ]
    title = "m=66,alpha=0.5,n=[300,350,400,450,500]"
    generate_table(y_n,title)

    # y_alpha = [
    #     [[0.8551,1.7243,1.7243,1.7100,1.7123,1.5350],[0.1695,0.1246,0.1246,0.1052,0.1058,0.4993]],
    #     [[1.2192,2.0640,2.0640,2.0525,2.0561,2.2598],[0.1016,0.3355,0.3355,0.3183,0.3298,0.2622]],
    #     [[1.3753,2.0746,2.0746,2.0647,2.0656,2.3023],[0.4810,0.9386,0.9386,0.8728,0.8819,1.0720]],
    #     [[1.6810,2.3158,2.3158,2.3062,2.3077,2.7042],[0.1985,0.2886,0.2886,0.2902,0.2850,0.7768]],
    #     [[2.2002,2.6025,2.6025,2.5580,2.5661,3.1067],[0.1734,0.1608,0.1608,0.1576,0.1473,0.3538]]
    # ]

    y_alpha = [
        [[2.9021,4.2227,4.2227,4.1427,4.1954,3.9368],[0.5873,0.6835,0.6835,0.7669,0.7549,1.7364]],
        [[3.3222,4.2296,4.2296,4.1835,4.2168,4.6130],[1.0432,2.3743,2.3743,2.2285,2.1366,1.0408]],
        [[4.0077,4.8915,4.8915,4.8824,4.9320,5.5209],[2.0149,2.1351,2.1352,2.3030,2.3340,4.3900]],
        [[4.5064,5.2476,5.2476,5.1783,5.2426,6.2451],[2.7241,3.1591,3.1591,3.0787,3.1367,2.7642]],
        [[4.8276,5.2342,5.2342,5.1425,5.2223,6.3213],[0.8427,0.7445,0.7445,0.6320,0.6103,0.4910]],
    ]
    title = "m=66,n=250,alpha=[0.6,0.7,0.8,0.9,1.0]"
    generate_table(y_alpha,title)

def musicdata1_table():
    # y_n = [
    #     [[1.9482,3.8081,3.8081,3.7265,3.7868,3.6717],[0.6873,0.5242,0.5242,0.5451,0.6441,1.3285]],
    #     [[1.6786,3.2092,3.2092,3.1620,3.1853,2.9218],[0.8113,1.3031,1.3031,1.3079,1.3278,1.2903]],
    #     [[1.2681,2.6381,2.6381,2.6070,2.6263,2.1381],[0.2598,0.4680,0.4680,0.4633,0.4568,1.3944]],
    #     [[1.0238,2.2062,2.2062,2.1960,2.2105,1.6811],[0.0494,0.0579,0.0579,0.0497,0.0518,0.6077]],
    #     [[0.9077,1.9830,1.9830,1.9602,1.9650,1.5128],[0.1420,0.2167,0.2167,0.2544,0.2522,0.1885]]
    # ]
    y_n = [
        [[1.9048,2.9816,2.9816,2.9610,2.9746,2.3357],[0.1034,0.6357,0.6357,0.5953,0.6166,0.9519]],
        [[1.5032,2.4837,2.4837,2.4381,2.4629,1.7920],[0.3865,0.2203,0.2203,0.1904,0.2268,1.5877]],
        [[1.2289,2.0185,2.0185,2.0025,2.0067,1.3721],[0.0181,0.0931,0.0931,0.1078,0.1012,0.2190]],
        [[1.0700,1.8637,1.8637,1.8555,1.8572,1.1220],[0.0733,0.1508,0.1508,0.1578,0.1644,0.3667]],
        [[0.9916,1.7026,1.7026,1.6932,1.6931,1.0138],[0.0690,0.1594,0.1594,0.1628,0.1611,0.2641]],
    ]
    title = "m=66,alpha=0.5,n=[300,350,400,450,500]"
    generate_table(y_n,title)

    # y_alpha = [
    #     [[0.9331,1.8226,1.8226,1.8077,1.8116,1.7338],[0.1160,0.2149,0.2149,0.2188,0.2175,0.5903]],
    #     [[1.2925,2.0817,2.0817,2.0539,2.0618,2.2863],[0.1327,0.1249,0.1249,0.0955,0.1046,0.2872]],
    #     [[1.3909,2.0677,2.0677,2.0664,2.0702,2.3758],[0.1251,0.1216,0.1216,0.0967,0.1026,0.2598]],
    #     [[1.6192,2.1666,2.1666,2.1537,2.1557,2.4869],[0.0095,0.0960,0.0960,0.0787,0.0823,0.0644]],
    #     [[2.2202,2.5952,2.5952,2.5595,2.5620,3.1496],[0.3182,0.6040,0.6040,0.6563,0.6639,0.8239]]
    # ]
    y_alpha = [
        [[2.6829,3.7717,3.7717,3.8093,3.8449,3.9458],[0.1180,0.8675,0.8675,1.2120,1.2636,1.1158]],
        [[3.1735,4.3137,4.3137,4.2297,4.2838,4.6202],[0.5997,0.9332,0.9332,0.7043,0.8339,3.4293]],
        [[3.6485,4.6685,4.6685,4.6332,4.6824,5.3813],[1.0578,1.5586,1.5586,1.5283,1.6347,1.0654]],
        [[4.1884,5.0189,5.0189,4.9768,5.0480,5.8918],[0.5381,0.9741,0.9741,1.2390,1.2308,1.2187]],
        [[4.7462,5.2657,5.2657,5.1825,5.2505,6.2974],[1.3804,2.3415,2.3415,1.7130,2.3967,0.8408]],
    ]
    title = "m=66,n=250,alpha=[0.6,0.7,0.8,0.9,1.0]"
    generate_table(y_alpha,title)
if __name__=="__main__":
    generatedata_table()
